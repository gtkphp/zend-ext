
/* {{{ php_<?php echo $name_function ?>_write_property */
static void
php_<?php echo $name_function ?>_write_property(zval *object, zval *member, zval *value, void **cache_slot)
{
    php_<?php echo $name_function ?> *intern = ZVAL_GET_PHP_<?php echo $this->nameclassHelper($this->name, 1) ?>(object);
    zend_string *member_str = member->value.str;

    // <?php echo $this->type ?>
    
    const struct Php<?php echo $this->camelcaseHelper($this->name) ?>Property *cmd = php_<?php echo $name_function ?>_properties_lookup(member_str->val, member_str->len);
    if (cmd) {
        switch(cmd->code) {
<?php
    $tab  = '    ';
    foreach($this->members as $property) {
        $extra  = '';
        $output = '';
        $type = trim($property->type);

        $output .= $tab . '    case PHP_'.$name_macro.'_'.strtoupper($property->name).':'.PHP_EOL;
        switch($this->type) {
        case 'union':
            $output .= $tab . '        cmd->setter(intern, value, member_str->val, &intern->'.$property->name.');'.PHP_EOL;
            $output .= $tab . '        intern->union_type = PHP_CAIRO_PATH_DATA_T_'.strtoupper($property->name).';'.PHP_EOL;
            break;
        default:
            $output .= $tab . '        cmd->setter(intern, value, member_str->val, &intern->'.$property->name.');'.PHP_EOL;
            break;
        }
        $output .= $tab . '    break;'.PHP_EOL;

        echo $output;//.'    //'.$type.PHP_EOL;
    }

?>
        }
    } else {
        // property not found
    }
}
/* }}} */
