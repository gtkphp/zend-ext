
/* {{{ gtk_read_property */
static zval*
php_<?php echo $name_function ?>_read_property(zval *object, zval *member, int type, void **cache_slot, zval *rv)
{
    php_<?php echo $name_function ?> *intern = ZVAL_GET_PHP_<?php echo $this->nameclassHelper($this->name, 1) ?>(object);
    zend_string *member_str = member->value.str;

    struct Php<?php echo $this->camelcaseHelper($this->name) ?>Property *cmd = php_<?php echo $name_function ?>_properties_lookup(member_str->val, member_str->len);
    if (cmd) {
        switch(cmd->code) {
<?php


foreach($this->members as $property) {

    $name = strtoupper($property->name);
    $name = str_replace('-', '_', $name);
    $const = 'PHP_'. $name_macro .'_'.$name;
    $name = strtolower($name);
    
    echo '        ';
    echo 'case '.$const.':'.PHP_EOL;
    echo '            ';
    echo 'ZVAL_COPY(rv, &intern->'.$name.');'.PHP_EOL;

    /*
    $type = str_replace('*', '', $property->type);
    $type = trim($type);
    switch ($type) {
        case 'int':
        case 'zend_long':
            echo '            ';
            echo 'ZVAL_LONG(rv, intern->ptr->'.$name.');'.PHP_EOL;
            break;
        case 'float':
        case 'double':
            echo '            ';
            echo 'ZVAL_DOUBLE(rv, intern->ptr->'.$name.');'.PHP_EOL;
            break;
        default:
            //echo 'if (obj->ptr->'.$name.'==NULL) ZVAL_NULL(&z'.$name.'); else ZVAL_COPY(&z'.$name.', obj->ptr->'.$name.')';
            //echo 'ZVAL_COPY(&z'.$name.', obj->ptr->'.$name.');'.PHP_EOL;
            //ZVAL_COPY(rvalue, intern->ptr-><?php echo $property_name ? >);
            echo '            {'.PHP_EOL;
            echo '                ';
            echo 'php_'.$name_function.' *v= php_'.$name_function.'_new(intern->ptr->'.$name.');'.PHP_EOL;
            echo '                ';
            echo 'ZVAL_OBJ(rv, &v->std);'.PHP_EOL;
            echo '            }'.PHP_EOL;
            //echo '???'.$type.PHP_EOL;
            break;
    }
    echo '            ';
    */

    echo '            ';
    echo 'break;'.PHP_EOL;
}
?>
        default:
            zend_internal_type_error(1, "Internal bug,");
            break;
        }
    } else {
        // property not found
    }

    return rv;
}
/* }}} */
