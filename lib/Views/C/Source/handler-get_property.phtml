<?php $output = $this->implementation->zend_override('get_property_ptr_ptr'); if($output): ?>

<?php echo $output; ?>

<?php else: ?>

<?php
$param = $this->implementation->param;
$get_param = $this->implementation->get_param;
?>
/* {{{ php_<?php echo $name_function ?>_get_property_ptr_ptr */
static zval *
php_<?php echo $name_function ?>_get_property_ptr_ptr(zval *object, zval *member, int type, void **cache_slot) {
    php_<?php echo $name_function ?>  *intern = <?php echo $get_param ?><?php echo $name_macro ?>(object);
    zend_string *member_str = member->value.str;
    zval *retval = NULL;

    const struct Php<?php echo $this->camelcaseHelper($this->name) ?>Property *cmd = php_<?php echo $name_function ?>_properties_lookup(member_str->val, member_str->len);
    if (cmd) {
        switch(cmd->code) {
<?php
    $tab  = '    ';
    foreach($this->members as $property) {
        $extra  = '';
        $output = '';
        $type = trim($property->type);

        $output .= $tab . '    case PHP_'.$name_macro.'_'.strtoupper($property->name).':'.PHP_EOL;
        switch($this->type) {
        case 'union':
            $output .= $tab . '        if(PHP_'.$name_macro.'_'.strtoupper($property->name).'==intern->union_type) {'.PHP_EOL;
            $output .= $this->implementation->zend_update_property($property->name);
            $output .= $tab . '            return &intern->'.$property->name.';'.PHP_EOL;
            $output .= $tab . '        } else {'.PHP_EOL;
            $output .= $tab . '            g_print("Type error : Expecting \'%s\' but you try to acces to \'%s\'\n",';
                $output .= 'php_'.$name_function.'_properties[intern->union_type-1].name, ';
                $output .= 'php_'.$name_function.'_properties[PHP_'.$name_macro.'_'.strtoupper($property->name).'-1].name);'.PHP_EOL;
            $output .= $tab . '        }'.PHP_EOL;
            break;
        default:
            $output .= $this->implementation->zend_update_property($property->name);
            $output .= $tab . '        return &intern->'.$property->name.';'.PHP_EOL;
            break;
        }
        //$output .= $tab . '    break;'.PHP_EOL;
    
        echo $output;//.'    //'.$type.PHP_EOL;
    }

?>
        }
    } else {
        // Error 
    }

    return retval;
}/* }}} */

<?php endif; ?>
