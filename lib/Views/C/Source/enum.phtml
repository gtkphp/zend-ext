<?php

$name_function = $this->nameclassHelper($this->name);
$name_macro = strtoupper($name_function);
$has_members = count($this->members);

?>
<?php echo $this->license; ?>

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <php.h>
#include <php_ini.h>
#include <zend_interfaces.h>
#include <ext/standard/info.h>

<?php
foreach($this->requires as $require) {
    echo '#include <' . $require .'>' . PHP_EOL;
}
echo PHP_EOL;

echo '#include "php_gtk.h"' . PHP_EOL;
foreach($this->dependencies as $dependency) {
    if (empty($dependency)) {
        echo PHP_EOL;
        continue;
    }
    echo '#include "' . $dependency .'"' . PHP_EOL;
}

?>


extern HashTable         classes;
extern zend_module_entry gtk_module_entry;



/*----------------------------------------------------------------------+
 | PHP_MINIT                                                            |
 +----------------------------------------------------------------------*/

 /*{{{ php_<?php echo $name_function ?>_class_init */
zend_class_entry*
php_<?php echo $name_function ?>_class_init(zend_class_entry *container_ce, zend_class_entry *parent_ce) {

<?php foreach($this->constants as $constant): ?>
    zend_register_long_constant("<?php echo $constant->name ?>", sizeof("<?php echo $constant->name ?>")-1,
        <?php echo $constant->name ?>, CONST_CS | CONST_PERSISTENT, gtk_module_entry.module_number);
<?php endforeach; ?>

    return NULL;
}/*}}} */

/*----------------------------------------------------------------------+
 | Zend-User utils                                                      |
 +----------------------------------------------------------------------*/
<?php
echo $this->implementation->writeFunctions(false);
?>

/*----------------------------------------------------------------------+
 | Zend-User API                                                        |
 +----------------------------------------------------------------------*/

/*----------------------------------------------------------------------+
 | PHP_METHOD                                                           |
 +----------------------------------------------------------------------*/

/*----------------------------------------------------------------------+
 | PHP_FUNCTION                                                         |
 +----------------------------------------------------------------------*/

<?php foreach($this->methods as $name=>$method): ?>
/* {{{ <?php echo $method->docblock ?> */
PHP_FUNCTION(<?php echo $method->name ?>)
{
<?php echo $method->args.PHP_EOL; ?>
<?php echo $method->call.PHP_EOL; ?>
<?php echo $method->return.PHP_EOL; ?>
}/* }}} */

<?php endforeach; ?>
