
<?php $output = $this->implementation->zend_override('get_debug_info'); if($output): ?>

<?php echo $output; ?>

<?php else: ?>

<?php
$param = $this->implementation->param;
$get_param = $this->implementation->get_param;
?>
/* {{{ php_<?php echo $name_function ?>_get_debug_info */
static HashTable*
php_<?php echo $name_function ?>_get_debug_info(<?php echo $param ?>, int *is_temp)
{
    php_<?php echo $name_function ?>  *obj = <?php echo $get_param ?><?php echo $name_macro ?>(object);
    HashTable   *debug_info,
    *std_props;

    *is_temp = 1;
    std_props = zend_std_get_properties(object);
    debug_info = zend_array_dup(std_props);

<?php

    $tab = '';
    if ('union'==$this->type) {
        $tab = '    ';
        echo '    ';
        echo 'switch (obj->union_type) {'.PHP_EOL;
    }

    // what is override ?
    foreach($this->members as $property) {
        $extra  = '';
        $output  = $tab . '    ';
        $output .= 'zval z'.$property->name.'; ';
        $type = trim($property->type);
        switch ($type) {
            case 'int':
            case 'zend_long':
                //$output  .= 'ZVAL_LONG(&z'.$property->name.', Z_LVAL(obj->'.$property->name.'));'.PHP_EOL;
                $output  .= 'ZVAL_COPY(&z'.$property->name.', &obj->'.$property->name.');'.PHP_EOL;
                break;
            case 'float':
            case 'double':
                //$output  .= 'ZVAL_DOUBLE(&z'.$property->name.', Z_DVAL(obj->'.$property->name.'));'.PHP_EOL;
                $output  .= 'ZVAL_COPY(&z'.$property->name.', &obj->'.$property->name.');'.PHP_EOL;
                break;
            case 'zval':
                $output  .= 'if (obj->ptr->'.$property->name.'==NULL) ZVAL_NULL(&z'.$property->name.'); else ZVAL_COPY(&z'.$property->name.', obj->ptr->'.$property->name.')';
                //echo 'ZVAL_COPY(&z'.$name.', obj->ptr->'.$name.');'.PHP_EOL;
                break;
            default:
                $output  .= 'ZVAL_COPY(&z'.$property->name.', &obj->'.$property->name.');'.PHP_EOL;
            /*
                $output .= PHP_EOL;
                $output .= $tab . '    zval member_'.$property->name.'; ZVAL_STRING(&member_'.$property->name.', "'.$property->name.'");'.PHP_EOL;
                $output .= $tab . '    php_'.$name_function.'_read_property(object, &member_'.$property->name.', IS_ARRAY, NULL, &z'.$property->name.');'.PHP_EOL;
                //$output .= '    zend_hash_str_update(debug_info, "'.$property->name.'", sizeof("'.$property->name.'")-1, &'.$property->name.');'.PHP_EOL;
        
                $extra = $tab . '    ';
                $extra .= 'zend_string_release(member_'.$property->name.'.value.str);'.PHP_EOL;
            */
    
                break;
        }
        $output .= $tab . '    ';
        $output .= 'zend_hash_str_update(debug_info, "'.$property->name.'", sizeof("'.$property->name.'")-1, &z'.$property->name.');'.PHP_EOL;
        $output .= $extra;

        if ('union'==$this->type) {
            echo '    ';
            echo 'case PHP_'.$name_macro.'_'.strtoupper($property->name).':'.PHP_EOL;
            echo '    {'.PHP_EOL;
            echo $output;
            echo '    }'.PHP_EOL;
            echo '    ';
            echo 'break;'.PHP_EOL;
        } else {
            echo $output;//.'    //'.$type.PHP_EOL;
        }
    }

    if ('union'==$this->type) {
        echo '    }'.PHP_EOL;
    }

?>
<?php echo $this->implementation->zend_extends('get_debug_info'); ?>

    return debug_info;
}
/* }}} */


<?php endif;/* $this->implementation->zend_override */ ?>

