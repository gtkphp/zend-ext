<?php

$name_function = $this->nameclassHelper($this->name);
$name_function = strtolower($name_function);
$name_macro = strtoupper($name_function);
$has_members = count($this->members);

?>#ifndef PHP_<?php echo $name_macro ?>_H
#define PHP_<?php echo $name_macro ?>_H

<?php echo $this->implementation->writeMacro(); ?>

#define PHP_<?php echo $name_macro ?>_FE() \
<?php $allow=false; $previous = $this->since; ?>
<?php foreach($this->methods as $name=>$method): ?>
<?php if ($allow && $method->since!=$previous): ?>#endif<?php echo PHP_EOL; endif; ?>
<?php if ($method->since > $this->since && $method->since!=$previous): ?>#if <?php echo $ns ?>_VERSION >= <?php $allow=true; echo $method->since.'\\'.PHP_EOL; endif; ?>
<?php $previous = $method->since; ?>
    PHP_GTK_FE(<?php echo $method->name ?>,<?php echo $method->pad ?> arginfo_<?php echo $method->name ?>) \
<?php endforeach; ?>
<?php if ($allow): ?>#endif \<?php echo PHP_EOL; endif; ?>


#define PHP_<?php echo $name_macro ?>_MINIT_FUNCTION(container_ce, parent_ce) \
    php_<?php echo $name_function ?>_class_init(container_ce, parent_ce)

#define PHP_<?php echo $name_macro ?>_MSHUTDOWN_FUNCTION() { \
}

#define PHP_<?php echo $name_macro ?>_RSHUTDOWN_FUNCTION() {\
}

zend_class_entry*
php_<?php echo $name_function ?>_class_init(zend_class_entry *container_ce, zend_class_entry *parent_ce);

<?php
if ($this->implementation) {
    echo $this->implementation->writeFunctions(true);
}
?>

<?php $allow=false; $previous = $this->since; ?>
<?php foreach($this->methods as $name=>$method): ?>
<?php if ($allow && $method->since!=$previous): ?>#endif<?php echo PHP_EOL; endif; ?>
<?php if ($method->since > $this->since && $method->since!=$previous): ?>#if <?php echo $ns ?>_VERSION >= <?php $allow=true; echo $method->since.PHP_EOL; endif; ?>
<?php $previous = $method->since; ?>
<?php echo $method->args; ?>
PHP_FUNCTION(<?php echo $method->name ?>);

<?php endforeach; ?>
<?php if ($allow): ?>#endif<?php echo PHP_EOL; endif; ?>


#endif	/* PHP_<?php echo $name_macro ?>_H */
